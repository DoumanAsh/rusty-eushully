
environment:
  global:
    PROJECT_NAME: eushully
  matrix:
    # Stable channel only?
    - TARGET: i686-pc-windows-gnu
      CHANNEL: stable
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: stable

# Install Rust and Cargo
# (Based on from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/channel-rust-stable"
  - ps: $env:RUST_VERSION = Get-Content channel-rust-stable | select -first 1 | %{$_.split('-')[1]}
  - if NOT "%CHANNEL%" == "stable" set RUST_VERSION=%CHANNEL%
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-${env:RUST_VERSION}-${env:TARGET}.exe"
  - rust-%RUST_VERSION%-%TARGET%.exe /VERYSILENT /NORESTART /DIR="C:\Program Files (x86)\Rust"
  - SET PATH=%PATH%;C:\Program Files (x86)\Rust\bin
  - if "%TARGET%" == "i686-pc-windows-gnu" set PATH=%PATH%;C:\msys64\mingw32\bin
  - if "%TARGET%" == "x86_64-pc-windows-gnu" set PATH=%PATH%;C:\msys64\mingw64\bin
  - rustc -V
  - cargo -V

build: false

test_script:
  - cargo build
  - cargo run -q

before_deploy:
  # Generate artifacts for release
  - cargo build --release
  - mkdir staging
  - mkdir staging\eushully_nocd
  - copy target\release\eushully_nocd.exe staging\eushully_nocd
  - copy eushully_nocd.cfg staging\eushully_nocd
  - cd staging
  - 7z a ../eushully_nocd-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip eushully_nocd/*
  - appveyor PushArtifact ../eushully_nocd-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip

deploy:
  description: "Just NoCD"
  # All the zipped artifacts will be deployed
  artifact: /.*\.zip/
  auth_token:
    secure: H5PQSeh6rHOoDLktlYlVLYu/iJMTwzzNVk8Wr//nqbYC7xrJuGDwKwiev/0Bl2d3
  provider: GitHub
  on:
    CHANNEL: stable
    appveyor_repo_tag: true

branches:
  only:
    - master
